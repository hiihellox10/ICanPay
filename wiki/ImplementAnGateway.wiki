= 实现基类支持更多支付网关 =

 * [http://code.google.com/p/icanpay/wiki/ImplementAnGateway#主要基类、接口介绍 主要基类、接口介绍]
 * [http://code.google.com/p/icanpay/wiki/ImplementAnGateway#让ICanPay支持新的支付网关 让ICanPay支持新的支付网关]
 * [http://code.google.com/p/icanpay/wiki/ImplementAnGateway#PayGateway基类介绍 PayGateway基类介绍]
 * [http://code.google.com/p/icanpay/wiki/ImplementAnGateway#实现创建订单接口 实现创建订单接口]
 * [http://code.google.com/p/icanpay/wiki/ImplementAnGateway#实现创建查询接口 实现创建查询接口]
 * [http://code.google.com/p/icanpay/wiki/ImplementAnGateway#实现PayGateway抽象方法完成支付网关通知的验证 实现PayGateway抽象方法完成支付网关通知的验证]

----
= 主要接口介绍 =

*PayGateway*

所有的支付网关的基类，新增加支持的支付网关必须继承自PayGateway。

*IPaymentForm*

当支付网关是通过创建一个包含订单数据的form表单来提交订单时通过实现IPaymentForm接口来创建支付订单的html页面代码。

*IPaymentUrl*

当支付网关是通过创建一个包含订单数据的url来提交订单时通过实现IPaymentUrl接口来创建订单的url。

*IQueryForm*

当支付网关是通过创建一个包含订单数据的form表单来查询订单时通过实现IQueryForm接口来创建查询订单的html页面代码。查询结果跟订单支付成功时的通知返回方式一致。

*IQueryUrl*

当支付网关是通过创建一个包含订单数据的url来查询订单时通过实现IPaymentUrl接口来创建订单的url。查询结果跟订单支付成功时的通知返回方式一致。

*IQueryPayment*

通过向支付网关查询url发送需要查询的订单数据，支付网关在查询url页面输出查询结果时实现此接口。

----
= 让ICanPay支持新的支付网关 =

下面演示如何增加新的支付网关，我们新建一个名为DemoGateway的新支付网关，首先他需要继承自PayGateway基类，然后实现其中的1个属性，3个方法。
{{{
public sealed class DemoGateway : PayGateway
{
    public override GatewayType GatewayType
    {
        get { throw new NotImplementedException(); }
    }

    public override PaymentNotifyMethod PaymentNotifyMethod
    {
        get { throw new NotImplementedException(); }
    }

    protected override bool CheckNotifyData()
    {
        throw new NotImplementedException();
    }

    protected override void WriteSucceedFlag()
    {
        base.WriteSucceedFlag();
    }
}
}}}
接着我们需要修改GatewayType枚举，在GatewayType枚举中增加Demo值。修改DemoGateway的GatewayType属性，让它返回新增的GatewayType.Demo值。
{{{
public enum GatewayType
{
    // 省略已存在枚举值
    Demo = 6
}
}}}
我们还需要实现PaymentNotifyMethod属性。订单的支付结果目前会通过2种形式发送回来，1
、支付网关服务器发送，2、将用户跳转到设置的通知url，并在查询字符串里包含支付结果。

有的支付网关可能通过服务器发送支付结果通知给你时会要求你输出一个特定的字符串用户表示已接收到支付通知，而将用户跳转到通知url时则不需要。如果你在用户跳转到通知url时输出表示接收到支付网站通知的字符串时会让用户觉得很奇怪，这时应该给用户一个支付成功的提示页面，而不是奇怪的字符串。

对于当前支付通知是否是有网关服务器发送，我们可以通过HttpContext.Current.Request的RequestType、UserAgent、UrlReferrer 3个属性来判断。这3个属性你可以先运行几次你需要新增的支付网关提供的Demo，完成几次支付并获得相关值。
{{{
public override PaymentNotifyMethod PaymentNotifyMethod
{
    get
    {
        if (string.Compare(HttpContext.Current.Request.RequestType, "POST") == 0 &&
            string.Compare(HttpContext.Current.Request.UserAgent, "Mozilla/4.0") == 0)
        {
            return PaymentNotifyMethod.ServerNotify;
        }

        return PaymentNotifyMethod.AutoReturn;
    }
}
}}}
CheckNotifyData方法用于验证当前支付网关返回的支付结果。通过查询字符串或from表单返回的数据都保存在PayGateway.GatewayParameterData属性中，你可以使用更方便的GetGatewayParameterValue方法来获得相应key的值。CheckNotifyData的实现请参考相关支付网关的文档。

WriteSucceedFlag方法用于输出支付网关要求的表示接受到支付通知的字符串，请参考相关支付网关的文档。